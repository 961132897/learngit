1.创建版本库

	* mkdir 文件夹名称
		创建文件夹在当前目录下
	* 修改默认启动位置
		** Git Bash->属性->去掉目标中的 --cd-to-home
		** 修改起始位置
		** 启动，生效
	* cd 路径名称
		cd /G/git/repository
		进入某个指定的目录
	* pwd 显示当前工作目录
	* git init
		将当前目录变成git仓库
	* git add 文件.后缀
		添加一个文件到仓库
		** add 文件.后缀 文件.后缀
			可以添加多个文件到仓库
	* git commit -m "修改说明"
		将add后的文件提交到仓库
		-m 输入的是文件提交的说明

2.时光机穿梭
	
	* git status
		查看当前仓库的状态

	$ git status
	# On branch master
	# Changes not staged for commit:
	# (use "git add <file>..." to update what will be committed)
	# (use "git checkout -- <file>..." to discard changes in working directory)

	#        modified:   git_command.txt

	# no changes added to commit (use "git add" and/or "git commit -a")

		modified:  指出了哪些文件被修改过了
			但是没有准备提交的修改

	* git diff
		查看具体的修改内容

###############################################################################
diff --git a/git_command.txt b/git_command.txt
index 1b38df4..b64cfe2 100644
--- a/git_command.txt
+++ b/git_command.txt
@@ -19,4 +19,26 @@
        * git commit -m "修改说明"
                将add后的文件提交到仓库
                -m 输入的是文件提交的说明
-
\ No newline at end of file
+
+2.时光机穿梭
+
+       * git status
+               查看当前仓库的状态
+
+       $ git status
+       # On branch master
+       # Changes not staged for commit:
+       # (use "git add <file>..." to update what will be committed)
+       # (use "git checkout -- <file>..." to discard changes in working directory)
+
+       #        modified:   git_command.txt
+
+       # no changes added to commit (use "git add" and/or "git commit -a")
+
+               modified:  指出了哪些文件被修改过了
+                       但是没有准备提交的修改
+
+       * git diff
+               查看具体的修改内容
+
+
~
###############################################################################


